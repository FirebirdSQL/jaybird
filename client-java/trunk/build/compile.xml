<?xml version="1.0"?>
<project name="compile">
    <!-- =================================================================== -->
    <!-- Compiles the source code                                            -->
    <!-- =================================================================== -->
    <target name="compile"
            depends="compile-j2ee, compile-driver, compile-compatibility, compile-tests, compile-etc, compile-examples, compile-resources, compile-stylesheets"/>

    <!-- calling this unjar a compile is stretching the truth a bit-->
    <target name="compile-j2ee" depends="init">
        <mkdir dir="${build.j2ee}"/>
        <unjar src="${module.thirdparty}/connector-api-1.5.jar" dest="${build.j2ee}"/>
    </target>

    <target name="compile-native" depends="init">
        <ant antfile="build_native.xml"/>
    </target>

    <target name="compile-examples">
        <mkdir dir="${build.examples}"/>
        <javac srcdir="${source.examples}"
               destdir="${build.examples}"
               target="${ant.java.version}"
               source="${ant.java.version}"
               debug="on"
               deprecation="on"
               optimize="on"
               includes="*"
               excludes="**/temp*"
                >
            <classpath refid="javac.examples.classpath"/>
        </javac>
    </target>

    <target name="set-jdbc-41-src" if="jdbc.41">
        <path id="source.java.additional">
            <pathelement path="${source.jdbc.41}"/>
        </path>
    </target>

    <target name="set-jdbc-42-src" if="jdbc.42">
        <path id="source.java.additional">
            <pathelement path="${source.jdbc.42}"/>
        </path>
    </target>

    <target name="set-openoffice-src-14" unless="jdk1.3">
        <echo message="OpenOffice support"/>
        <path id="source.java.openoffice">
            <pathelement path="${source.openoffice}"/>
        </path>
    </target>

    <target name="set-driver-sources" depends="init,set-jdbc-41-src,set-jdbc-42-src,set-openoffice-src-14"/>

    <target name="compile-driver" depends="set-driver-sources">
        <mkdir dir="${build.classes}"/>

        <echo message="Architecture: ${os.arch}"/>
        <echo message="${ant.java.version}"/>
        <echo message="${toString:source.java.openoffice}"/>
        <echo message="${toString:source.java.additional}"/>

        <copy todir="${build.classes}" filtering="no">
            <fileset dir="${source.java}">
                <include name="org/firebirdsql/encodings/xml/encodings.xsd"/>
            </fileset>
        </copy>

        <javac destdir="${build.classes}"
               target="${ant.java.version}"
               source="${ant.java.version}"
               debug="on"
               deprecation="on"
               optimize="on"
               includes="org/**"
               excludes="**/temp*"
                >
            <classpath refid="javac.driver.classpath"/>
            <src path="${source.java}"/>
            <src path="${source.jna-client}"/>
            <src refid="source.java.openoffice"/>
            <src refid="source.java.additional"/>
        </javac>
    </target>

    <target name="compile-compatibility" depends="compile-driver">
        <mkdir dir="${build.compatibility}"/>
        <javac srcdir="${source.compatibility}"
               destdir="${build.compatibility}"
               target="${ant.java.version}"
               source="${ant.java.version}"
               debug="on"
               deprecation="on"
               optimize="on"
                >
            <classpath refid="javac.compatibility.classpath"/>
        </javac>
    </target>

    <target name="set-jdbc-41-test" if="jdbc.41">
        <path id="source.test.additional">
        </path>
    </target>

    <target name="set-jdbc-42-test" if="jdbc.42">
        <path id="source.test.additional">
            <pathelement path="${source.test.42}"/>
        </path>
    </target>

    <target name="compile-tests" depends="compile-driver,set-jdbc-41-test,set-jdbc-42-test">
        <mkdir dir="${build.test}"/>
        <javac
                destdir="${build.test}"
                target="${ant.java.version}"
                source="${ant.java.version}"
                debug="on"
                deprecation="on"
                optimize="on"
                includes="org/**"
                excludes="**/temp* **/hibernate/*"
                >
            <classpath refid="javac.test.classpath"/>
            <src path="${source.test}"/>
            <src path="${source.test.jna}"/>
            <src refid="source.test.additional"/>
        </javac>

        <copy todir="${build.test}" filtering="no">
            <fileset dir="${source.test}">
                <include name="**/*.properties"/>
                <include name="**/*.xml"/>
            </fileset>
        </copy>

    </target>

    <!-- Compile etc files (manifest) -->
    <target name="compile-etc" depends="init">
        <mkdir dir="${build.etc}"/>
        <copy todir="${build.etc}" filtering="yes">
            <fileset dir="${source.etc}">
                <include name="default.mf"/>
            </fileset>
            <filterset>
                <filter token="java.vm.version" value="${java.vm.version}"/>
                <filter token="java.vm.vendor" value="${java.vm.vendor}"/>

                <filter token="specification.title" value="${specification.title}"/>
                <filter token="specification.version" value="${specification.version}"/>
                <filter token="specification.vendor" value="${specification.vendor}"/>

                <filter token="implementation.title" value="${implementation.title}"/>
                <filter token="implementation.url" value="${implementation.url}"/>
                <filter token="implementation.version" value="${implementation.version}"/>
                <filter token="implementation.vendor" value="${implementation.vendor}"/>
                <filter token="implementation.vendor.id" value="${implementation.vendor.id}"/>

            </filterset>
        </copy>
    </target>

    <!-- Compile resource files -->
    <target name="compile-resources" depends="init">
        <mkdir dir="${build.resources}"/>
        <copy todir="${build.resources}" filtering="no">
            <fileset dir="${source.resources}">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>

    <!-- Compile stylesheets -->
    <target name="compile-stylesheets" depends="init">
        <mkdir dir="${build.stylesheets}"/>
        <copy todir="${build.stylesheets}" filtering="yes">
            <fileset dir="${source.stylesheets}">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>
</project>