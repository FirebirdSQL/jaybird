package org.firebirdsql.jdbc.oo;

import java.net.URL;
import java.sql.*;

import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.jdbc.*;
import org.firebirdsql.jdbc.FBObjectListener.BlobListener;
import org.firebirdsql.jdbc.FBObjectListener.StatementListener;

public class OOPreparedStatement extends AbstractPreparedStatement {

    public OOPreparedStatement(GDSHelper c, int rsType, int rsConcurrency,
            int rsHoldability, StatementListener statementListener,
            BlobListener blobListener) throws SQLException {
        super(c, rsType, rsConcurrency, rsHoldability, statementListener,
                blobListener);
    }

    public OOPreparedStatement(GDSHelper c, String sql, int rsType,
            int rsConcurrency, int rsHoldability,
            StatementListener statementListener, BlobListener blobListener,
            boolean metaDataQuery, boolean standaloneConnection) throws SQLException {
        super(c, sql, rsType, rsConcurrency, rsHoldability, statementListener,
                blobListener, metaDataQuery, standaloneConnection);
    }

    public void completeStatement() throws SQLException {
        // workaround - do not close the result set, OpenOffice gets crazy

        if (!completed) notifyStatementCompleted();
    }

    public ParameterMetaData getParameterMetaData() throws SQLException {
        return new OOParameterMetaData(fixedStmt.getInSqlda().sqlvar, gdsHelper);
    }

    public void setURL(int parameterIndex, URL x) throws SQLException {
        throw new FBDriverNotCapableException();
    }

    public boolean execute(String sql, int autoGeneratedKeys)
            throws SQLException {
        throw new FBDriverNotCapableException();
    }

    public boolean execute(String sql, int[] columnIndexes) throws SQLException {
        throw new FBDriverNotCapableException();
    }

    public boolean execute(String sql, String[] columnNames)
            throws SQLException {
        throw new FBDriverNotCapableException();
    }

    public int executeUpdate(String sql, int autoGeneratedKeys)
            throws SQLException {
        throw new FBDriverNotCapableException();
    }

    public int executeUpdate(String sql, int[] columnIndexes)
            throws SQLException {
        throw new FBDriverNotCapableException();
    }

    public int executeUpdate(String sql, String[] columnNames)
            throws SQLException {
        throw new FBDriverNotCapableException();
    }

    public ResultSet getGeneratedKeys() throws SQLException {
        throw new FBDriverNotCapableException();
    }

}
