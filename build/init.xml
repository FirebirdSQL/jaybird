<?xml version="1.0"?>
<project name="init" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <target name="init">
        <echo message="Java version: ${ant.java.version}"/>
        <echo message="Ant version: ${ant.version}"/>
        <!-- External build properties
             All properties can be overridden by adding them to build-local.properties
        -->
        <property file="${basedir}/build-local.properties" />
        <property file="${basedir}/build.properties" />

        <!-- Setup the build timestamp & build identifier properties -->
        <tstamp>
            <format property="build.number" pattern="yyyyMMddHHmm"/>
            <format property="YEAR" pattern="yyyy"/>
        </tstamp>
        <property name="build.id" value="${build.number}"/>

        <!-- Java 7 specific properties -->
        <condition property="maven.jdkversion" value="jdk17">
            <javaversion exactly="1.7"/>
        </condition>
        <condition property="javac.level" value="1.7">
            <javaversion exactly="1.7"/>
        </condition>

        <!-- Java 8 specific properties -->
        <condition property="maven.jdkversion" value="jdk18">
            <javaversion exactly="1.8"/>
        </condition>
        <condition property="javac.level" value="1.8">
            <javaversion exactly="1.8"/>
        </condition>

        <!-- Java 9 specific properties -->
        <condition property="maven.jdkversion" value="jdk9">
            <javaversion atleast="9"/>
        </condition>
        <condition property="javac.level" value="9">
            <javaversion atleast="9"/>
        </condition>

        <condition property="java.module.arg" value="" else="">
            <javaversion atleast="9"/>
        </condition>

        <condition property="jdbc.41" value="true">
            <javaversion exactly="1.7"/>
        </condition>

        <condition property="jdbc.42" value="true">
            <or>
                <javaversion exactly="1.8"/>
                <!-- temp fix TODO remove -->
                <javaversion atleast="9"/>
            </or>
        </condition>

        <echo message="maven.jdkversion: ${maven.jdkversion}"/>
        <echo message="javac.level: ${javac.level}"/>
        <echo message="jdbc.41: ${jdbc.41}"/>
        <echo message="jdbc.42: ${jdbc.42}"/>

        <property name="Name" value="Jaybird"/>
        <property name="name" value="jaybird"/>

        <property name="version.name" value="-JDK_${ant.java.version}"/>

        <property name="version.maven" value="${version.major}.${version.minor}.${version.revision}${version.tag}"/>
        <property name="version.full" value="${version.maven}${version.name}"/>

        <!-- Manifest version info -->
        <property name="specification.title" value="JSR 221 JDBC API"/>
        <condition property="specification.version" value="4.1">
            <javaversion exactly="1.7"/>
        </condition>
        <condition property="specification.version" value="4.2">
            <javaversion exactly="1.8"/>
        </condition>
        <condition property="specification.version" value="4.3">
            <javaversion atleast="9"/>
        </condition>
        <property name="specification.vendor" value="Oracle Corporation"/>

        <property name="implementation.title" value="Jaybird"/>
        <property name="implementation.url" value="https://www.firebirdsql.org"/>
        <property name="implementation.version"
                  value="${version.full} (build: tag=${version.svntag} date=${build.id})"/>
        <property name="implementation.vendor" value="Firebird project"/>
        <property name="implementation.vendor.id" value="${implementation.url}"/>

        <!--where everything goes -->
        <property name="lib.dir" value="${basedir}/lib"/>
        <property name="lib_test.dir" value="${lib.dir}/test"/>

        <!--you will presumably need to change this if you want to use it.-->
        <!--
        <property name="jboss.base.dir" value="/usr/java/jboss/rc1/jboss-all/build/output/jboss-3.0.1RC1"/>
        <property name="jboss.deploy.dir" value="${jboss.base.dir}/server/all/deploy"/>
        -->

        <!-- Setup the module environment. -->
        <property name="module.root" value="${basedir}"/>

        <property file="${module.root}/local.properties"/>
        <property name="module.source" value="${module.root}/src"/>
        <property name="module.output" value="${module.root}/output"/>
        <property name="module.tools" value="${module.root}/lib"/>
        <property name="module.thirdparty" value="${module.source}/lib"/>
        <property name="module.etc" value="${module.source}/etc"/>

        <!-- Where source files live -->
        <property name="source.java" value="${module.source}/main"/>
        <property name="source.extern" value="${module.source}/extern"/>
        <property name="source.openoffice" value="${module.source}/openoffice"/>
        <property name="source.jdbc.41" value="${module.source}/jdbc_41"/>
        <property name="source.jdbc.42" value="${module.source}/jdbc_42"/>
        <property name="source.jna-client" value="${module.source}/jna-client"/>
        <property name="source.etc" value="${module.source}/etc"/>
        <property name="source.resources" value="${module.source}/resources"/>
        <property name="source.stylesheets" value="${module.source}/stylesheets"/>
        <property name="source.test" value="${module.source}/test"/>
        <property name="source.test.42" value="${module.source}/test_42"/>
        <property name="source.test.jna" value="${module.source}/jna-test"/>
        <property name="source.documentation" value="${module.source}/documentation"/>

        <property name="thirdparty" value="${module.root}/thirdparty"/>
        <property name="jboss.source.root" location="${thirdparty}/jboss/"/>

        <!-- Where build generated files will go -->
        <property name="build.j2ee" value="${module.output}/j2ee"/>
        <property name="build.classes" value="${module.output}/classes"/>
        <property name="build.test" value="${module.output}/test"/>
        <property name="build.lib" value="${module.output}/lib"/>
        <property name="build.api" value="${module.output}/api"/>
        <property name="build.etc" value="${module.output}/etc"/>
        <property name="build.bin" value="${module.output}/bin"/>
        <property name="build.docs" value="${module.output}/docs"/>
        <property name="build.resources" value="${module.output}/resources"/>
        <property name="build.stylesheets" value="${module.output}/stylesheets"/>
        <property name="build.reports.pure_java" value="${module.output}/reports/pure_java"/>
        <property name="build.reports.native" value="${module.output}/reports/native"/>
        <property name="build.reports.embedded" value="${module.output}/reports/embedded"/>
        <property name="build.testlog" value="${module.output}/log"/>
        <property name="build.dist" value="${module.output}/dist"/>
        <property name="build.documentation" value="${module.output}/documentation"/>
        <property name="build.maven" value="${module.output}/maven"/>

        <property name="archive.name.main" value="${name}"/>

        <property name="archive.name.rar" value="${archive.name.main}-${version.maven}.rar"/>
        <property name="archive.name.full" value="${archive.name.main}-full-${version.maven}.jar"/>
        <property name="archive.name.simple" value="${archive.name.main}-${version.maven}.jar"/>
        <property name="archive.name.test" value="${archive.name.main}-test-${version.maven}.jar"/>
        <property name="archive.name.sources" value="${archive.name.main}-${version.maven}-sources.jar"/>
        <property name="archive.name.javadoc" value="${archive.name.main}-${version.maven}-javadoc.jar"/>

        <!-- Names for maven -->
        <property name="maven.artifactId" value="${name}-${maven.jdkversion}"/>
        <property name="archive.maven.simple" value="${maven.artifactId}-${version.maven}.jar"/>
        <property name="archive.maven.sources" value="${maven.artifactId}-${version.maven}-sources.jar"/>
        <property name="archive.maven.javadoc" value="${maven.artifactId}-${version.maven}-javadoc.jar"/>
        <property name="maven.artifact.location" value="${build.maven}/${maven.artifactId}"/>
        <property name="maven.pom.template" value="${module.root}/build/maven-release/jaybird-template.pom"/>
        <property name="maven.pom.target" value="${maven.artifactId}-${version.maven}.pom"/>

        <filterset id="maven.filterSet">
            <filter token="ARTIFACT_ID" value="${maven.artifactId}"/>
            <filter token="VERSION" value="${version.maven}"/>
        </filterset>

        <!-- generate maven relocation artifact for org.firebirdsql.jdbc:jaybird -->
        <condition property="maven.generateRelocation" value="true">
            <javaversion exactly="1.8"/>
        </condition>
        <property name="maven.relocation.location" value="${build.maven}/relocation"/>
        <property name="maven.relocation.template" value="${module.root}/build/maven-release/jaybird-relocation.pom"/>
        <property name="maven.relocation.target" value="jaybird-${version.maven}.pom"/>

        <property name="junit.timeout" value="600000"/>
        <!-- 10 minutes -->
        <property name="junit.jvm" value="java"/>
        <property name="junit.jvm.options" value=""/>

        <property name="junit.formatter.type" value="xml"/>
        <property name="junit.formatter.usefile" value="true"/>
        <property name="junit.printsummary" value="true"/>
        <property name="junit.haltonerror" value="true"/>
        <property name="junit.haltonfailure" value="true"/>
        <property name="junit.fork" value="true"/>
        <property name="junit.forkmode" value="perTest"/>
        <property name="junit.timeout" value="60000"/>
        <!--property name="junit.jvm" value="true"/-->

        <!-- these may be overridden on the command line or build-local.properties to test against a server
          on another host.  For example,
        ./build.sh -Dtest.db.host=192.168.0.3 -Dtest.db.dir=/usr/local/firebird/dev/client-java/output/db tests-report-html
        -->
        <property name="test.db.host" value="localhost"/>
        <property name="test.db.port" value="3050"/>
        <property name="test.db.dir" value="${module.output}/db"/>
        <property name="test.db.lc_ctype" value="NONE"/>

        <property name="excludedPackages"
                  value="org.firebirdsql.pool,org.firebirdsql.jdbc.oo"/>

        <property name="build.compiler" value="modern"/>

        <!-- Documentation build options -->
        <!--
            NOTE: Install pandoc from http://johnmacfarlane.net/pandoc/installing.html
            Override by use of build-local.properties in the root of the project.
        -->
        <property name="pandoc.app" location="/home/${user.name}/.cabal/bin/pandoc"/>

        <path id="javac.j2ee.classpath">
            <pathelement location="${module.thirdparty}/connector-api-1.5.jar"/>
        </path>

        <path id="javac.driver.classpath">
            <path refid="javac.j2ee.classpath"/>
            <pathelement location="${build.j2ee}"/>
            <pathelement location="${module.thirdparty}/antlr-runtime-4.7.2.jar"/>
            <pathelement location="${module.thirdparty}/jna-5.2.0.jar"/>
        </path>

        <path id="javac.test.classpath">
            <path refid="javac.driver.classpath"/>
            <pathelement location="${build.classes}"/>
            <pathelement location="${lib.dir}/junit.jar"/>
            <pathelement location="${module.thirdparty}/fscontext.jar"/>
            <pathelement location="${module.thirdparty}/providerutil.jar"/>
            <fileset dir="${lib_test.dir}" includes="*.jar">
                <exclude name="objenesis-2.6.jar" unless:set="jdbc.41"/>
                <exclude name="objenesis-3.0.1.jar" if:set="jdbc.41"/>
            </fileset>
        </path>

        <!--
         Java 8 Javadoc has doclint which refuses to build Javadoc for HTML 4.01 syntax errors.
         This currently gives 100 errors and 100 warnings. We will need to clean this up eventually, but for now
         disabling seems to be the better option.
         For details see: http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html
        -->
        <condition property="javadoc.additionalparam" value="-Xdoclint:none" else="">
            <javaversion exactly="1.8"/>
        </condition>

    </target>

    <!-- dumps all properties to console, both defined by init and standard ant properties -->
    <target name="showProperties" depends="init">
        <echoproperties/>
    </target>
</project>
